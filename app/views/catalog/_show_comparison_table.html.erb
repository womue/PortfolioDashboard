<% 
	#require 'rsolr'

	# Get author, lecture and group from document
	doc_presenter = show_presenter(@document)
	author = doc_presenter.field_value "author"
	lecture = doc_presenter.field_value "lecture"
	lecture_search = "lecture: \"#{lecture}\""
	group = doc_presenter.field_value "group"
	group_search = "group: \"#{group}\""

	# Fields to be requested from solr server and shown in table. Hashes are prepared below.
	fields = ["nrWords", "nrImages", "nrUploadedImages", "nrWikipediaImages", "nrInstagramImages", "nrFlickrImages", "nrSnapchatImages", "nrPinterestImages", "nrExternalLinks", "nrWikipediaLinks"]
	lecture_data = {:nrWords=> 0, :nrImages=> 0, :nrUploadedImages=> 0, :nrWikipediaImages=> 0, :nrInstagramImages=> 0, :nrFlickrImages=> 0, :nrSnapchatImages=> 0, :nrPinterestImages=> 0, :nrExternalLinks=> 0, :nrWikipediaLinks=> 0 }
	group_data = {:nrWords=> 0, :nrImages=> 0, :nrUploadedImages=> 0, :nrWikipediaImages=> 0, :nrInstagramImages=> 0, :nrFlickrImages=> 0, :nrSnapchatImages=> 0, :nrPinterestImages=> 0, :nrExternalLinks=> 0, :nrWikipediaLinks=> 0 }

	# Server is globally set in application rb
	server = Rails.application.config.solr_server

	# ---- LECTURE---- 
	# Build request to get data of students lecture
	solr = RSolr.connect :url => server
	response_lecture = solr.get 'select', :params => {
		:q=> lecture_search,
		:fl=> fields,
		:wt => :ruby,
		:hl => false,
		:rows => 10000
	}

	# Sum the data of each view-fields found for the lecture
	response_lecture["response"]["docs"].each_with_index do |doc, i|
		lecture_data.each { |key,value| lecture_data[key] += doc["#{key}"] }
	end

	# Calculate average of each field
	lecture_data.each do |key, value| 
		lecture_data[key] = value/response_lecture["response"]["numFound"] if value !=0
	end

	# ---- GROUP----
	# Build request to get data of students group
	solr = RSolr.connect :url => server
	response_group = solr.get 'select', :params => {
		:q=> group_search,
		:fl=> fields,
		:wt => :ruby,
		:hl => false,
		:rows => 10000
	}

	# Sum the data of each view-fields found for the group
	response_group["response"]["docs"].each_with_index do |doc, i|		
		group_data.each { |key,value| group_data[key] += doc["#{key}"] }
	end

	# Calculate average of each field
	group_data.each do |key, value| 
		group_data[key] = value/response_group["response"]["numFound"] if value !=0
	end

%>

<%# ---- TABLE---- %>
<h4>Ansicht im Vergleich mit seinem Seminar und seiner Mahara Gruppe</h4>
<table class="table table-striped">
	<tr>
		<th>Feld</th>
		<th><%= t("blacklight.results.author")%> <% author %></th>
		<th><%= t("blacklight.results.lecture")%> <%= lecture %> &empty; / n= <%= response_lecture["response"]["numFound"]%></th>
		<th><%= t("blacklight.results.group")%> <%= group %> &empty; / n= <%= response_group["response"]["numFound"]%></th>
	</tr>
	
	<% fields.each do |field| %>
		<tr>
			<td id="<%=field%>"><%= t("blacklight.results.#{field}") %></td>
			<td id="<%=field%>"><%= doc_presenter.field_value field %></td>
			<td><%= lecture_data[field.to_sym] %></td>
			<td><%= group_data[field.to_sym] %></td>
		</tr>
	<% end %>
</table>
<p>Weitere Felder Todo: Videos, Ressourcen, Lexikal, Dichte</p><br>