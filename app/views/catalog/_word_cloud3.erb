<!-- http://bl.ocks.org/azza-bazoo/9381206 -->
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css">

<style type="text/css">
  svg {
    position: relative;
  }
  body {
    margin: 0;
    padding: 0;
  }
  #map {
    height: 600px;
    width: 960px;
  }
</style>



<div id="map"></div>


<script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
<script src="http://code.jquery.com/jquery-2.0.3.min.js"></script>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="https://rawgit.com/jasondavies/d3-cloud/master/build/d3.layout.cloud.js"></script>


<script>


// -------------------------------------------------

var data = [

  {
    lat: -33.8708,
    long: 151.2036,
    words: [
     "Jared", "Wiles", "Sharpening", "the", "edge", "of", "your", "HTML5", "Animate,", "Reflow,", "Code,", "Inspect,", "Type,", "and", "Build", "Learn", "why", "you", "need", "that", "Creative", "Cloud", "membership", "Stoyan", "Stefanov", "Liking", "performance", "Even", "if", "you", "don't", "love", "the", "Like", "button,", "you'll", "hate", "not", "hearing", "how", "much", "love", "has", "gone", "into", "making", "it", "perform", "Douglas", "Crockford", "Faster,", "easier", "and", "safer", "Not", "just", "the", "most", "successful", "online", "payment", "solution,", "also", "the", "one", "that", "is", "keeping", "Crockford", "sharp", "If", "we're", "lucky,", "we'll", "get", "to", "hear", "about", "Paypal", "the", "Good", "Parts", "Steve", "Haffenden", "Putting", "the", "Hey", "you", "in", "JSConfAU", "We'll", "take", "a", "running", "start", "and", "try", "to", "fit", "all", "the", "majesty", "of", "JSConfAU", "in", "to", "16", "minute", "the", "two", "minutes", "an", "hour,", "not", "accounting", "for", "the", "before", "and", "after", "parties", "Hang", "on", "to", "your", "hats!", "Daniel", "Friedman", "Nodebots,", "Nodecopters,", "and", "now", "Ninja", "Blocks", "Ninja", "Blocks", "are", "back", "better", "than", "ever", "and", "are", "running", "on", "a", "Node.JS", "server", "near", "you", "And", "that", "means", "REALLY", "near", "you", "We'll", "get", "the", "inside", "scoop", "on", "where", "the", "platform's", "heading", "John", "Bristowe", "Surviving", "the", "Mayan", "Apocalypse", "with", "Kendo", "UI", "you", "have", "until", "December", "21st", "to", "finish", "your", "web", "application", "and", "to", "immortalised", "in", "the", "ashes", "of", "digital", "civilisation", "you", "need", "a", "framework", "Fast", "Enter", "Kendo", "UI", "to", "save", "the", "day", "At", "least,", "until", "the", "meteor", "hits", "JudgementDay.js", "anyone?", ";)", "Nick", "Hodge", "IE10", "web,", "phone", "and", "native", "apps", "Nick", "will", "introduce", "a", "technique", "so", "cunning", "it", "could", "have", "featured", "on", "Black", "Adder's", "a", "Christmas", "Carol", "John", "Scott", "the", "Joy", "of", "AngularJS", "a", "web", "framework", "from", "Google", "that", "brings", "web", "designers", "and", "JavaScript", "developers", "together", "in", "harmonious", "co-operation", "Aaron", "Powel", "Something,", "something,", "TypeScript", "Application", "scale,", "type", "safe,", "class-designed,", "compiled", "JavaScript", "Because,", "reason", "Glen", "Maddern", "Sup,", "AngularJS?", "a", "developer's", "view", "of", "AngularJS'", "features", "with", "developer's", "pragmatism", "Alex", "Dickson", "Building", "debugger", "disassembler", "in", "JavaScript", "Chris", "Darroch", "JavaScript", "tips", "and", "tricks", "from", "the", "front-line", "Adam", "Ahmed", "Real", "world", "Node.JS", "drones", "Cameron", "Adams", "Pure", "JavaScript", "Earle", "Castledine", "jQuery", "Jason", "Crane", "YUI", "Christopher", "Hunt", "Typesafe", "Play-ing", "with", "WebJars", "Nikolay", "Nemshilov", "Lovely.IO", "Mark", "Byers", "JavaScript", "based", "ERP", "building", "the", "full", "experience", "Simon", "Rodwell", "I18n", "why,", "how,", "and", "where", "the", "name", "came", "from", "Christopher", "Saunders", "WebGL,", "the", "Goo", "Engine,", "and", "your", "Blackberry", "Michael", "Neale", "Jenkins-CI", "JavaScript", "building", "all", "the", "javascript", "server", "side", "and", "client", "side", "Patrick", "Roumanoff", "the", "future", "is", "a", "promise", "Promises", "and", "A+", "John", "Allsopp", "Building", "an", "HTML5", "security", "camera", "LIVE", "in", "under", "15", "minutes", "Don", "Nguyen", "Server", "Side", "JavaScript", "building", "a", "game", "right", "before", "your", "eyes", "Ben", "Schwarz", "Built", "an", "application,", "and", "will", "show", "you", "what", "he", "learnt", "Aaron", "Powell", "Everything", "you", "wanted", "to", "know", "about", "IE11,", "and", "even", "some", "things", "you", "didn't", "know", "you", "wanted", "Vaughn", "Knight", "How", "I", "turned", "away", "from", "JavaScript", "so", "I", "could", "embrace", "JavaScript", "Benjamin", "Lupton", "DocPad", "How,", "when,", "where,", "and", "why", "David", "Banham", "Deploy", "Your", "Node", "IaaS", "and", "PaaS", "players", "from", "a", "nodeJS", "perspective", "Nikolay", "Nemshilov", "JavaScript", "and", "CSS", "Totally", "changing", "the", "course", "of", "humans", "history", "Damon", "Oehlman", "[LIGHTNING TALK]", "RANT", "RANT", "RANT", "Benjamin", "Lupton", "David", "Banham", "Nikolay", "Nemshilov", "Damon", "Oehlman", "Jed", "Watson", "KeystoneJS", "a", "head-start", "on", "the", "features", "you", "need", "Simon", "Swain", "Berzerk", "Interactive", "charting", "via", "Backbone", "Ben", "Wong", "Alex", "Dickson", "a", "node-powered", "arcade", "machine", "Patrick", "Klug", "a", "cross-platform", "game", "Boris", "Bozic", "a", "gold-class", "Gold", "Class", "application", "using", "Cordova", "Alex", "Danillo", "advances", "in", "the", "encoding", "space", "and", "will", "outline", "base128", "encoding", "Hourann", "Bosci", "JavaScript", "Devs", "don't", "get", "lost", "John", "Bristowe", "a", "Brief", "Introduction", "to", "Polymer", "Tom", "Walker", "Cognizance"
    ]
  },

  {

    lat: -33.8672,
    long: 151.2069,
    words: [
      "Gabe", "Hollombe", "Archers", "vs", "Zombies!", "Making", "a", "game", "with", "EaselJS", "and", "Coffeescript", "Joseph", "Gentle", "Stop,", "Collaborate,", "and", "Listen", "Ben", "Buchanan", "Code", "Combat", "writing", "and", "refactoring", "for", "fun", "and", "profit", "Paul", "Theriault", "An", "Introduction", "to", "OWASP", "the", "Open", "Web", "Application", "Security", "Project", "Filippo", "Vitale", "Modelling", "a", "view", "of", "the", "Model", "View", "ViewModel", "Simon", "Swain", "Lugging", "and", "Plugging", "building", "a", "custom", "Interface", "from", "the", "ground", "up", "with", "jQueryUI", "and", "Raphael", "John", "Allsopp", "Offline", "apps", "with", "HTML5", "Steve", "Haffenden", "Everybody", "loves", "Strings,", "an", "Introduction", "Chris", "Darroch", "Making", "testing", "less", "testing", "with", "Sinon.js", "Dominic", "Lovell", "What's", "next", "for", "webOS?", "Valery", "Yushchenko", "Modern", "Tea", "Ceremony", "Powered", "by", "Node.js", "Jonathan", "Creenaune", , "walk", "through", "JavaScript's", "event-driven", "model", "and", "beyond", "Brian", "McKenna", "AltJS", "languages", "that", "compile", "to", "JS", "Adam", "Ahmed", "Inside", "large", "scale", "applications", "Wesley", "Walser", "Getting", "loud", "about", "Amplify.js", "John", "Bristowe", "Bringing", "the", "Awesome", "with", "Kendo", "UI", "Graeme", "Merrall", "Everything", "you", "wanted", "to", "know", "about", "Dart", "but", "were", "too", "afraid", "to", "ask", "Jared", "Wyles", "Missing", "the", "Forrest", "for", "the", "trees", "Ben", "Schwarz", "Never", "accept", "no", "for", "an", "answer", "Joseph", "Gentle", "a2D", "physics", "engine", "to", "JavaScript", "Gabe", "Hollombe", "Steam", "Network", "whitepapers", "Earle", "Castledine", "Deadlines", "and", "deprecation", "jQuery", "you", "can't", "see", "Marcus", "and", "Maddy", "Ninja", "Blocks", "the", "online", "world", "you", "can", "see", "Simon", "Swain", "Now", "you've", "got", "two", "problems", "Plumbing", "up", "some", "live", "data", "with", "Node", "Real", "time", "Node.js,", "socket.io,", "redis", "and", "visual", "basic", "Lachlan", "Hardy", "Windows 8", "and", "Websockets,", "mate!", "Chris", "Broadfoot", "Big", "and", "Beautiful", "Data", "Visualisation", "with", "WebSockets", "and", "WebGL", "Vaughan", "Knight", "From", "Way", "Out", "Wars", "and", "Dodo", "GoGo,", "and", "everything", "I've", "learnt", "between", "Rob", "Hawkes", "Boot", "to", "Gecko", "(B2G)", "Pursuing", "the", "goal", "of", "building", "a", "complete,", "standalone", "operating", "system", "for", "the", "open", "web", "Filippo", "Vitale", "Project", "Euler", "208", "How", "to", "love", "javascript", "enough", "you'll", "even", "want", "to", "solve", "a", "math", "problem", "Andrew", "Dodson", "OAuth", "Now", "that's", "something", "we", "can", "all", "identify", "with", "Dave", "Elkin", "Template", "sharing", "between", "the", "server", "and", "the", "client", "with", "node.js", "and", "Hogan", "Jo", "Cranford", "Testing", "like", "a", "boss", "Writing", "unit", "tests", "for", "JavaScript", "can", "be", "daunting", "Even", "once", "you've", "written", "the", "tests,", "how", "do", "you", "get", "them", "into", "the", "build?", "See", "how", "to", "write", "tests", "quickly,", "and", "get", "them", "running", "continuously", "Chris", "Saunders", "Power", "and", "Flexibility", "the", "BlackBerry", "Web", "Platform", "Learn", "about", "the", "commitments", "BlackBerry", "is", "making", "to", "the", "web", "community", "and", "the", "open", "source", "projects", "that", "they", "are", "supporting", "He", "will", "also", "have", "a", "BlackBerry", "PlayBook", "up", "for", "grabs", "so", "stay", "tuned", "to", "find", "out", "how", "you", "can", "win!", "Sugendran", "Ganess", "Making", "a", "scott", "free", "Ski", "Free", "Just", "create", "a", "game", "in", "the", "browser,", "wrap", "it", "in", "some", "sort", "of", "container", "and", "sell", "it", "for", "lots", "of", "monies", "in", "every", "store", "How", "hard", "could", "it", "be?", "Valery", "Yushchenko", "Touching", "on", "Sencha", "Touch", "Our", "resident", "strongman", "looks", "at", "the", "strong", "and", "not", "so", "strong", "points", "of", "Sencha", "Touch", "David", "Banham", "there", "I", "fixed", "it!", "Sometimes", "an", "elegant", "solution", "starts", "its", "life", "as", "a", "conglomeration", "of", "a", "few", "ways", "we", "get", "things", "done", "that", "at", "first", "look", "like", "horrible", "kludges,", "but", "actually", "turn", "out", "to", "be", "anything", "but!"
    ]
  }

]





// -------------------------------------------------






$(function() {
  // one of D3's built-in scales, with 10 more-or-less random (but reasonable) colours
  var fill = d3.scale.category10();

  // draw a text element for one word into the passed SVG group; these functions based on
  // https://github.com/jasondavies/d3-cloud/blob/master/examples/simple.html
  var draw = function(word_data, group_el) {
    group_el
      .selectAll("text")
        .data(word_data)
      .enter().append("text")
        .style("font-size", function(d) { return d.size + "px"; })
        .style("font-family", "Impact, sans-serif")
        .style("fill", function(d, i) { return fill(i); })
        .attr("text-anchor", "middle")
        .attr("transform", function(d) {
          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
        })
        .text(function(d) { return d.key; })
  }

  // run the word cloud layout on the whole wordset, rendering into the i'th group element
  var layoutWords = function(wordset, i, fontScale) {
    var layout = d3.layout.cloud()
          .size([450, 450])
          .text(function(d) { return d.key; })
          .font("Impact")
          .fontSize(function(d) { return fontScale(+d.value); })
          .rotate(function(d) { return ~~(Math.random() * 4) * 45 - 90; })
          .padding(1)
          .on("end", function(word_data) {
            draw(word_data, g[i]);
          })
          .words(wordset)
          .start();
  }

  var stopwords = ["and", "the", "with", "for", "to", "of", "in", "from", "a", "can", "but", "get", "an", "so"];

  var wordsets = [];
  var max_count = 0;  // used to set font size scale

  // fairly braindead text processing: filter out stopwords, count occurrences,
  // generate an array of objects for use in the word cloud code
  data.forEach(function(item) {
    var word_hash = {};
    item.words.forEach(function(word) {
      if (stopwords.indexOf(word) !== -1) {
        return;
      }

      if (word in word_hash) {
        word_hash[word] ++;
      } else {
        word_hash[word] = 1;
      }
    });

    var wordset = [];
    for (var word in word_hash) {
      wordset.push({ key: word, value: word_hash[word] });
      if (word_hash[word] > max_count) { max_count = word_hash[word]; }
    }

    wordsets.push(wordset);
  });


  // setup Leaflet map: centre location and zoom level are handpicked for presentation
  var mapOriginalZoom = 17;

  var map = new L.Map("map", {center: [-33.8691, 151.20538], zoom: mapOriginalZoom});

  // add elements for use with D3 into the overlay pane
  var svg = d3.select(map.getPanes().overlayPane).append("svg");
  var g = [];


  // reposition the SVG when the user zooms or pans, so the whole word cloud is visible
  var resetSVG = function() {
    // Loosely based on http://bost.ocks.org/mike/leaflet/
    // TODO: possible alternative approach at http://stackoverflow.com/a/16473294/1523020
    var ctopleft = map.containerPointToLatLng(L.point(0,0));
    var ltopleft = map.latLngToLayerPoint(ctopleft);

    var zoom_level = Math.pow(2, (map.getZoom() - mapOriginalZoom));

    // the SVG moves when the user pans, so put it back to being exactly on top of the map
    svg.style("left", ltopleft.x + "px")
       .style("top", ltopleft.y + "px");

    for (var i = 0; i < g.length; i ++) {
      // recalculate pixel coords of where the word cloud centre should be (changes when the user zooms)
      var word_centre = map.latLngToContainerPoint(new L.LatLng(data[i].lat, data[i].long));

      g[i].attr("transform", "scale(" + zoom_level + ")translate(" + (word_centre.x / zoom_level) + "," + (word_centre.y / zoom_level) + ")");
    }

  }


  // handpicked scale to look reasonable at our chosen zoom level
  var fontScale = d3.scale.log().range([5, max_count * 3]);

  wordsets.forEach(function(wordset, idx) {
    g[idx] = svg.append("g")
                .attr("class", "leaflet-zoom-hide");

    layoutWords(wordset, idx, fontScale);
  });


  // initial SVG setup: it should be exactly on top of the map (same size and position)
  svg.attr("width", $("#map").width())
     .attr("height", $("#map").height())
     .style("left", "0px")
     .style("top", "0px");

  
  // register map-moving event handler with Leaflet, and do an initialisation so it looks right on load
  map.on("moveend", resetSVG);
  resetSVG();

});

</script>